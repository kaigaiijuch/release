#!/usr/bin/env bash

set -eu -o pipefail
set -C # Prevent output redirection using ‘>’, ‘>&’, and ‘<>’ from overwriting existing files.

if [[ "${TRACE-0}" == "1" ]]; then
    set -vx
fi

if [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
    echo 'Usage: ./fetch_repo reponame
    reponame should be in the format of "username/repo".
'
    exit
fi

REPOS_DIR=${REPOS_DIR:-repos}
GITHUB_TOKEN=${GITHUB_TOKEN}

cd "$(dirname "$0")"/../$REPOS_DIR

main() {

  if [ "$#" -ne 1 ]; then
    echo 'Error: reponame is required.'
    exit 1
  fi
  reponame=$1

  repodir=$(basename $reponame)
  if [[ ! -d $repodir ]]; then
    git clone https://$GITHUB_TOKEN@github.com/$reponame.git
  fi

  cd $repodir
  git fetch --all

  if [[ $(git status --short --untracked-files=no | wc -l) -gt 0 ]]; then
    git stash
    git checkout main
    git pull --rebase
    git stash pop
  else
    git checkout main
    git pull --rebase
  fi
}

main "$@"

# styleguide | Style guides for Google-originated open-source projects https://google.github.io/styleguide/shellguide.html
# Shell Script Best Practices — The Sharat's https://sharats.me/posts/shell-script-best-practices/
